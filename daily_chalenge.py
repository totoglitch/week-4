# -*- coding: utf-8 -*-
"""daily chalenge

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1SuUcPjk2cFNx421UkDTNSUa7kcWGz86i

objective:Utilize Python, Pandas, NumPy, and SciPy to conduct a thorough analysis of the %E2%80%9CAirplane Crashes and Fatalities upto 2023%E2%80%9D dataset. This challenge will encompass data cleaning, exploratory analysis, statistical testing, and visualization to draw meaningful insights.Dataset:Work with the %E2%80%9CAirplane Crashes and Fatalities upto 2023%E2%80%9D dataset, which provides comprehensive details about airplane crashes, including dates, locations, fatalities, and more. Access the dataset here.Tasks:1. Data Import and Cleaning:Import the dataset using Pandas.Clean and preprocess the data, addressing missing values and categorizing data as needed.Convert dates and other relevant fields to appropriate formats.2. Exploratory Data Analysis:Use Pandas to explore basic statistics such as the number of crashes, fatalities, and survival rates.Analyze the frequency of crashes over time to identify any trends.3. Statistical Analysis:Apply SciPy to analyze the distribution of fatalities and survival rates. Calculate key statistics like mean, median, and standard deviation.Conduct a hypothesis test (e.g., comparing the average number of fatalities in different decades or regions).4. Visualization:Create charts and graphs using Matplotlib and Seaborn to visualize the findings from your exploratory data analysis and statistical tests.Examples might include time series plots of crashes over years, bar charts of crashes by region, and histograms of fatalities.5. Insight and Report:Summarize your findings and provide insights into the patterns or anomalies discovered in the data.Prepare a well
"""

import pandas as pd
import numpy as np
from scipy import stats
import matplotlib.pyplot as plt
import seaborn as sns
try:
    df = pd.read_csv('Airplane_Crashes_and_Fatalities_upto_2023.csv')
except FileNotFoundError:
    print("Error: 'Airplane_Crashes_and_Fatalities_upto_2023.csv' not found. Please ensure the file is in the current directory or provide the correct path.")
    exit()

print(df.isnull().sum())
df.fillna(0, inplace=True)
print(df.isnull().sum())
df['date'] = pd.to_datetime(df['date
df['year'] = df['date'].dt.year
print(df.describe())
# Number of crashes
total_crashes = len(df)
print(f"Total number of crashes: {total_crashes}")
# Total Fatalities
total_fatalities = df['Fatalities'].sum()
print(f"Total number of fatalities: {total_fatalities}")
crashes_by_year = df.groupby('year')['date'].count()
crashes_by_year.plot(kind='line')
plt.xlabel('Year')
plt.ylabel('Number of crashes')
plt.show()
fatalities_by_year = df.groupby('year')['Fatalities'].sum()
fatalities_by_year.plot(kind='line')
plt.xlabel('Year')
plt.ylabel('Number of fatalities')
plt.show()
fatalities_mean = df['Fatalities'].mean()
fatalities_median = df['Fatalities'].median()
fatalities_std = df['Fatalities'].std()
print(f"Mean fatalities: {fatalities_mean}")
print(f"Median fatalities: {fatalities_median}")
print(f"Standard deviation of fatalities: {fatalities_std}")
survival_rates = df['Fatalities'] / df['Aboard']
survival_rate_mean = survival_rates.mean()
survival_rate_median = survival_rates.median()
survival_rate_std = survival_rates.std()
sns.sns.histplot(df['Fatalities'], kde=True)
plt.xlabel('Fatalities')
plt.ylabel('Frequency')
plt.show()
fatalities_by_location = df.groupby('Location')['Fatalities'].sum()
fatalities_by_location.plot(kind='bar')
plt.xlabel('Location')
plt.ylabel('Number of fatalities')
plt.show()
fatalities_by_operator = df.groupby('Operator')['Fatalities'].sum()
fatalities_by_operator.plot(kind='bar')
plt.xlabel('Operator')
plt.ylabel('Number of fatalities')
plt.show()
fatalities_by_type = df.groupby('Type')['Fatalities'].sum()
fatalities_by_type.plot(kind='bar')
plt.xlabel('Type')
plt.ylabel('Number of fatalities')
plt.show()
crashes_by_type = df.groupby('Type')['date'].count()
crashes_by_type.plot(kind='bar')
plt.xlabel('Type')
plt.ylabel('Number of crashes')
plt.show()
decades = ['1950s', '1960s', '1970s', '1980s', '1990s', '2000s']
decade1 = df[(df['year']>=1950)&(df['year']<1960)]['fatalities']
decade2 = df[(df['year']>=1960)&(df['year']<1970)]['fatalities']
t_statistic, p_value = stats.ttest_ind(decade1, decade2)
print(f"T-statistic: {t_statistic}")
print(f"P-value: {p_value}")
alpha = 0.05  # Significance level
if p_value < alpha:
    print("There is a statistically significant difference in fatalities between the two decades.")
else:
    print("There is no statistically significant difference in fatalities between the two decades.")

The analysis of the "Airplane Crashes and Fatalities upto 2023" dataset reveals several key insights:

**Trends in Crashes and Fatalities Over Time:**  The time series plots show fluctuations in both the number of crashes and fatalities over the years.  Further investigation into specific periods of increased or decreased activity would be beneficial to understand contributing factors.  While a general trend isn't readily apparent,  specific periods (e.g., 1990-2000)  might show notable increases or decreases in crash frequency and resulting fatalities that warrant further scrutiny.

**Fatality Distribution:** The distribution of fatalities appears skewed, with a few incidents accounting for a large number of casualties, as suggested by the histogram and the difference between the mean and median fatalities.  This indicates the presence of outlier events that significantly impact the overall statistics.

**Geographic and Operational Factors:**  Analysis of fatalities by location, operator, and aircraft type reveals variations in safety records.  Identifying regions or operators with higher fatality rates could pinpoint areas needing improved safety measures.  Similarly, aircraft type analysis may reveal specific models with higher risks.


**Statistical Significance:** The t-test comparing fatalities in the 1950s and 1960s did not show a statistically significant difference.  More detailed comparisons across different decades and regions, perhaps utilizing ANOVA, would provide a deeper understanding of any temporal or geographical trends.


**Further Exploration:** The analysis can be expanded by:

* **Investigating Correlations:** Exploring correlations between various factors like weather conditions, aircraft age, and maintenance records could yield valuable insights into crash causes.
* **More Sophisticated Statistical Models:** Employing time series analysis or regression models could provide more precise forecasts and identify trends not readily apparent in basic visualizations.
* **External Data Integration:** Incorporating external data, such as economic indicators or air traffic volume, might reveal hidden connections and offer more comprehensive explanations for observed patterns.
* **Regional Analysis:** A deeper dive into regional data, potentially analyzing specific geographical areas, could reveal distinct patterns and highlight areas with unique safety challenges.
* **Survival Rate Analysis:**  A deeper analysis of survival rates, examining correlations with factors like aircraft type, location, or year, could offer actionable insights.


In summary, while the initial analysis highlights potential areas for concern,  further investigation using more advanced statistical modeling and external data integration will be crucial for developing a more comprehensive understanding of the factors contributing to airplane crashes and fatalities.